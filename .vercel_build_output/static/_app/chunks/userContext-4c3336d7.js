import{Q as s,C as l}from"./vendor-06509e96.js";class a{constructor(e="",o=""){this.API_URL="https://infinite-reef-54814.herokuapp.com",this.path=e,this.errMsg=o}async reqToken(e,o){if(this.hasToken()){alert("You are already login");return}try{const{data:t}=await s({method:"POST",url:this.API_URL+this.path,headers:{"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},responseType:"json",data:{email:e,password:o}});return console.log(t),this.setLocalStorage(t.token,t.refresh_token),this.displayToken(),!0}catch(t){return console.log(t),alert(this.errMsg),!1}}async getData(e=!1){if(!this.hasToken()){alert("Please login first");return}const o=localStorage.getItem("token");try{const t=await s({method:"GET",url:this.API_URL+this.path,headers:{"Access-Control-Allow-Origin":"*","Content-Type":"application/json",Authorization:`Bearer ${o}`},responseType:"json"});return console.log(t),t.data}catch(t){return console.log(t),e?void 0:(await this.refreshToken(),this.getData(!0))}}async getUserProfile(e=!1){if(!this.hasToken())return;const o=localStorage.getItem("token");try{const t=await s({method:"POST",url:this.API_URL+this.path,headers:{"Access-Control-Allow-Origin":"*","Content-Type":"application/json",Authorization:`Bearer ${o}`},responseType:"json",data:{token:o}});return console.log(t),t.data}catch(t){return console.log(t),e?void 0:(await this.refreshToken(),this.getUserProfile(!0))}}async refreshToken(){try{const{data:e}=await s({method:"POST",url:this.API_URL+"/auth/refresh-token",headers:{"Access-Control-Allow-Origin":"*","Content-Type":"application/json"},responseType:"json",data:{refresh_token:localStorage.getItem("refresh_token")}});console.log(e),this.setLocalStorage(e.token,e.refresh_token),this.displayToken()}catch(e){console.log(e)}}logout(){localStorage.removeItem("token"),localStorage.removeItem("refresh_token"),window.location.href="/"}hasToken(){return!!localStorage.getItem("token")}setLocalStorage(e,o){localStorage.setItem("token",e),localStorage.setItem("refresh_token",o)}displayToken(){console.log("FROM LOCAL STORAGE"),console.log(localStorage.getItem("token")),console.log(localStorage.getItem("refresh_token"))}}const n=l(null),c=async(r,e)=>{const o="Your email and password is invalid";return await new a("/auth/login",o).reqToken(r,e)},h=async(r,e)=>{const o="Your email has been used. Please login";return await new a("/auth/register",o).reqToken(r,e)},g=async()=>{const e=await new a("/auth/profile").getUserProfile();n.set(e),console.log(e),n.subscribe(o=>console.log(o))},p=()=>{new a().logout(),n.set(null)};export{c as a,g,p as l,h as r,n as u};
